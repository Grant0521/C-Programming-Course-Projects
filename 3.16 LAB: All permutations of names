/*
Write a program that lists all ways people can line up for a photo (all permutations of a list of strings). The program will read a list of one word names into vector nameList (until -1), and use a recursive function to create and output all possible orderings of those names separated by a comma, one ordering per line.

When the input is:

Julia Lucas Mia -1
then the output is (must match the below ordering):

Julia, Lucas, Mia 
Julia, Mia, Lucas 
Lucas, Julia, Mia 
Lucas, Mia, Julia 
Mia, Julia, Lucas 
Mia, Lucas, Julia 
*/

#include <vector>
#include <string>
#include <iostream>

using namespace std;

void PrintAllPermutations(vector<string> permList, vector<string> nameList) {
   unsigned int i;
   string pick;

   if (nameList.size() == 0) {
      for (i = 0; i < permList.size() - 1; i++) {
         cout << permList.at(i) << ", ";
      }
      cout << permList.at(i) << endl;
   }
   
   else {
      for (i = 0; i < nameList.size(); ++i) {
         pick = nameList.at(i);
         nameList.erase(nameList.begin() + i);
         permList.push_back(pick);
         
         PrintAllPermutations(permList, nameList);
         
         nameList.insert(nameList.begin() + i, pick);
         permList.pop_back();
      }
      return;
   }
}

int main() {
   vector<string> nameList;
   vector<string> permList;
   string name;
         
   cin >> name;
   while (name != "-1") {
      nameList.push_back(name);
      cin >> name;
   }

   PrintAllPermutations(permList, nameList);
   
   return 0;
}
