/*
Write a program that takes in three integers as inputs and outputs the largest value. Use a try block to perform all the statements. Use a catch block to catch any ios_base::failure caused by missing inputs and output the number of inputs read and the largest value. Output "No max" if no inputs are read.

Note: Because inputs are pre-entered when running a program in the zyLabs environment, the system throws the ios_base::failure when inputs are missing. Test the program by running the program in the Develop mode.

Hint: Use a counter to keep track of the number of inputs read and compare the inputs accordingly in the catch block when an exception is caught.

Ex: If the input is:

3 7 5
the output is:

7
Ex: If the input is:

3
the system throws the ios_base::failure and outputs:

1 input(s) read:
Max is 3
Ex: If no inputs are entered:


the system throws the ios_base::failure and outputs:

0 input(s) read:
No max
*/



#include <iostream>
using namespace std;

int main() {
   cin.exceptions(ios::failbit); // Allow cin to throw exceptions
   int val1;
   int val2;
   int val3;
   int max = 0;
   int count = 0;
   
   val1 = 0;
   val2 = 0;
   val3 = 0;
      
   try {
      cin >> val1;
      count += 1;
      cin >> val2;
      count += 1;
      cin >> val3;
      count += 1;
   }  
   catch(ios_base::failure&) {
      cout << count << " input(s) read:" << endl;
      if (count > 0) {
         cout << "Max is ";
      }
   }
   
      
   if (count == 3) {
      if ((val1 > val2) && (val1 > val3)) {
         max = val1;
      }
      else if ((val2 > val1) && (val2 > val3)) {
         max = val2;
      }
      else {
         max = val3;
      }
      cout << max <<endl;
   }
   else if (count == 2){
      if (val1 > val2) {
         max = val1;
      }
      else {
         max = val2;
      }
      cout << max <<endl;
   }
   else if (count == 1){
      max = val1;
      cout << max <<endl;
   }
   else if (count == 0) {
      cout << "No max" << endl;
   }
   
   return 0;
}
